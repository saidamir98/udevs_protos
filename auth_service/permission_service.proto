syntax="proto3";

package auth_service;
option go_package="genproto/auth_service";

import "auth.proto";
import "google/protobuf/empty.proto";

service PermissionService {
    rpc GetRoleById(RolePrimaryKey) returns (GetRoleByIdResponse) {}
    rpc GetRolesList(GetRolesListRequest) returns (GetRolesResponse) {}
    rpc AddRole(AddRoleRequest) returns (Role) {}
    rpc UpdateRole(UpdateRoleRequest) returns (Role) {}
    rpc RemoveRole(RolePrimaryKey) returns (Role) {}

    rpc CreatePermission(CreatePermissionRequest) returns (GetPermissionByIDResponse) {}
    rpc GetPermissionByID(PermissionPrimaryKey) returns (GetPermissionByIDResponse) {}
    rpc GetPermissionList(GetPermissionListRequest) returns (GetPermissionListResponse) {}
    rpc UpdatePermission(UpdatePermissionRequest) returns (GetPermissionByIDResponse) {}
    rpc DeletePermission(PermissionPrimaryKey) returns (google.protobuf.Empty) {}

    rpc UpsertScope(UpsertScopeRequest) returns (Scope) {}
    rpc GetScopeList(GetScopeListRequest) returns (GetScopesResponse) {}

    rpc AddPermissionScope(AddPermissionScopeRequest) returns (PermissionScope) {}
    rpc RemovePermissionScope(PermissionScopePrimaryKey) returns (PermissionScope) {}

    rpc AddRolePermission(AddRolePermissionRequest) returns (RolePermission) {}
    rpc AddRolePermissions(AddRolePermissionsRequest) returns (AddRolePermissionsResponse) {}
    rpc RemoveRolePermission(RolePermissionPrimaryKey) returns (RolePermission) {}
    rpc PermissionList(PermissionGenerated) returns(google.protobuf.Empty) {}
}

message PermissionGenerated {
    message Permission {
        string permission = 1;
        message Scope {
            string url = 1;
            string method = 2;
        }
        repeated Scope scopes = 2;
        repeated Permission children = 3;
    }
    repeated Permission permissions = 1;
}

message GetPermissionByIDResponse {
    string id = 1;
    string client_platform_id = 2;
    string parent_id = 3;
    string name = 4;
    repeated PermissionScope permission_scopes = 5;
}

message GetRoleByIdResponse {
    string id = 1;
    string client_type_id = 2;
    string name = 3;
    ClientType client_type = 4;
    repeated Permission permissions = 5;
}

message UpsertScopeRequest {
    string client_platform_id = 1;
    string path = 2;
    string method = 3;
}

message ScopePrimaryKey {
    string client_platform_id = 1;
    string path = 2;
    string method = 3;
}

message AddRoleRequest {
    string client_type_id = 2;
    string name = 3;
    string client_platform_id = 4;
    string project_id = 5;
}

message UpdateRoleRequest {
    string id = 1;
    string client_type_id = 2;
    string name = 3;
    string client_platform_id = 4;
    string project_id = 5;
}

message RolePrimaryKey {
    string id = 1;
}

message CreatePermissionRequest {
    string client_platform_id = 2;
    string parent_id = 3;
    string name = 4;
}

message PermissionPrimaryKey {
    string id = 1;
}

message GetPermissionListRequest {
    int32 limit = 1;
    int32 offset = 2;
    string search = 3;
}

message GetPermissionListResponse {
    int32 count = 1;
    repeated Permission permissions = 2;
}

message UpdatePermissionRequest {
    string id = 1;
    string client_platform_id = 2;
    string parent_id = 3;
    string name = 4;
}

message AddPermissionScopeRequest {
    string permission_id = 1;
    string client_platform_id = 2;
    string path = 3;
    string method = 4;
}

message PermissionScopePrimaryKey {
    string permission_id = 1;
    string client_platform_id = 2;
    string path = 3;
    string method = 4;
}

message AddRolePermissionRequest {
    string role_id = 1;
    string permission_id = 2;
}

message AddRolePermissionsRequest {
    repeated AddRolePermissionRequest permissions = 1;
}

message AddRolePermissionsResponse {
    int64 added_roles = 1;
}

message RolePermissionPrimaryKey {
    string role_id = 1;
    string permission_id = 2;
}

message GetRolesListRequest {
    uint32 offset = 1;
    uint32 limit = 2;
    string client_platform_id = 3;
    string client_type_id = 4;
}

message GetRolesResponse {
    repeated Role roles = 1;
}

message GetScopeListRequest {
    uint32 limit = 1;
    uint32 offset = 2;
    string search = 3;
    string order_by = 4;
    string order_type = 5;
    string client_platform_id = 6;
}

message GetScopesResponse {
    uint32 count = 1;
    repeated Scope scopes = 2;
}